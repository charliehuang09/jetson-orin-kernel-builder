// SPDX-License-Identifier: GPL-2.0-only
// SPDX-FileCopyrightText: Copyright (c) 2023-2024, NVIDIA CORPORATION & AFFILIATES. All rights reserved.

/dts-v1/;
/plugin/;

#define CAM0_RST	TEGRA234_MAIN_GPIO(H, 3)
#define CAM0_PWDN	TEGRA234_MAIN_GPIO(H, 6)
#define CAM1_PWDN	TEGRA234_MAIN_GPIO(AC, 0)
#define CAM_I2C_MUX 	TEGRA234_AON_GPIO(CC, 3)
#include <dt-bindings/tegra234-p3767-0000-common.h>

/ {
	overlay-name = "Camera IMX296-C and IMX296-C";
	jetson-header-name = "Jetson 24pin CSI Connector";
	compatible = JETSON_COMPATIBLE_P3768;
	/* IMX296 connected on cam0 and IMX296 connected on cam1 port */

	fragment@0 {
		target-path = "/";
		__overlay__ {

		imx296_fixed_cam_clk: imx_296_fixed_cam_clk {
			compatible = "fixed-clock";
			#clock-cells = <0>;
			status = "okay";
			clock-frequency = <54000000>;
        	};

			tegra-capture-vi  {
				num-channels = <2>;
				ports {
					#address-cells = <1>;
					#size-cells = <0>;
					port@0 {
						reg = <0>;
						rbpcv3_imx296_vi_in0: endpoint {
							port-index = <1>;
							bus-width = <1>;
							remote-endpoint = <&rbpcv3_imx296_csi_out0>;
						};
					};
					port@1 {
						reg = <1>;
						rbpcv3_imx296_vi_in1: endpoint {
							port-index = <2>;
							bus-width = <1>;
							remote-endpoint = <&rbpcv3_imx296_csi_out1>;
						};
					};
				};
			};
			tegra-camera-platform {
				compatible = "nvidia, tegra-camera-platform";
				num_csi_lanes = <2>;
				max_lane_speed = <1500000>;
				min_bits_per_pixel = <10>;
				vi_peak_byte_per_pixel = <2>;
				vi_bw_margin_pct = <25>;
				max_pixel_rate = <7500000>;
				isp_peak_byte_per_pixel = <5>;
				isp_bw_margin_pct = <25>;
				modules {
					module0 {
						badge = "jakku_front_RBPCV3";
						position = "front";
						orientation = "1";
						drivernode0 {
							pcl_id = "v4l2_sensor";
							sysfs-device-tree = "/sys/firmware/devicetree/base/bus@0/cam_i2cmux/i2c@0/rbpcv3_imx296_a@1a";
						};
					};
					module1 {
						badge = "jakku_rear_RBPCV3";
						position = "rear";
						orientation = "1";
						drivernode0 {
							pcl_id = "v4l2_sensor";
							sysfs-device-tree = "/sys/firmware/devicetree/base/bus@0/cam_i2cmux/i2c@1/rbpcv3_imx296_c@1a";
						};
					};
				};
			};
			bus@0 {
				host1x@13e00000 {
					nvcsi@15a00000 {
						num-channels = <2>;
						#address-cells = <1>;
						#size-cells = <0>;
						channel@0 {
							reg = <0>;
							ports {
								#address-cells = <1>;
								#size-cells = <0>;
								port@0 {
									reg = <0>;
									rbpcv3_imx296_csi_in0: endpoint@0 {
										port-index = <1>;
										bus-width = <1>;
										remote-endpoint = <&rbpcv3_imx296_out0>;
									};
								};
								port@1 {
									reg = <1>;
									rbpcv3_imx296_csi_out0: endpoint@1 {
										remote-endpoint = <&rbpcv3_imx296_vi_in0>;
									};
								};
							};
						};
						channel@1 {
							reg = <1>;
							ports {
								#address-cells = <1>;
								#size-cells = <0>;
								port@0 {
									reg = <0>;
									rbpcv3_imx296_csi_in1: endpoint@2 {
										port-index = <2>;
										bus-width = <1>;
										remote-endpoint = <&rbpcv3_imx296_out1>;
									};
								};
								port@1 {
									reg = <1>;
									rbpcv3_imx296_csi_out1: endpoint@3 {
										remote-endpoint = <&rbpcv3_imx296_vi_in1>;
									};
								};
							};
						};
					};
				};
				cam_i2cmux {
					status = "okay";
					compatible = "i2c-mux-gpio";
					#address-cells = <1>;
					#size-cells = <0>;
					mux-gpios = <&gpio_aon CAM_I2C_MUX GPIO_ACTIVE_HIGH>;
					i2c-parent = <&cam_i2c>;
					i2c@0 {
						status = "okay";
						reg = <0>;
						#address-cells = <1>;
						#size-cells = <0>;
						rbpcv2_imx219_a@10 {
							status = "disabled";
						};
						rbpcv3_imx296_a@1a {
							reset-gpios = <&gpio CAM0_PWDN GPIO_ACTIVE_HIGH>;
							compatible = "sony,imx296";
							/* I2C device address */
							reg = <0x1a>;
							/* V4L2 device node location */
							devnode = "video0";
							clocks = <&imx296_fixed_cam_clk>;
							clock-names = "mclk";
							mclk = "mclk";
							/* Physical dimensions of sensor */
							physical_w = "5.0232";
							physical_h = "3.7536";
							sensor_model = "imx296";
							use_sensor_mode_id = "true";
							mode0 {
								// TODO(austin): Figure out what mclk actually resolves to and is used for.  We set mclk to it...  But I don't know what that does.  It appears in the datasheet?
								mclk_khz = "54000";
								num_lanes = "1";
								tegra_sinterface = "serial_a";
								phy_mode = "DPHY";
								discontinuous_clk = "no";
								dpcm_enable = "false";
								cil_settletime = "0";
								lane_polarity = "0";

								active_w = "1456";
								active_h = "1088";
								mode_type = "bayer";
								pixel_phase = "rggb";
								csi_pixel_bit_depth = "10";
								/* Only used by android */
								readout_orientation = "0";
								line_length = "1100";
								inherent_gain = "1";
								mclk_multiplier = "22";
								pix_clk_hz = "118800000";

								gain_factor = "16";
								framerate_factor = "1000000";
								exposure_factor = "1000000";
			       				// TODO(austin): Min is actually 0, do we really need to get to it?
								min_gain_val = "1"; /* 0db */
								max_gain_val = "200"; /* 48 db */
								step_gain_val = "1";
								default_gain = "100"; // JC: was "1";
								min_hdr_ratio = "1";
								max_hdr_ratio = "1";
								min_framerate = "64373"; /* 0.06... fps */
								max_framerate = "60375670"; /* 60.3... fps */
								step_framerate = "1";
								default_framerate = "60000000"; /* 60.0 fps */
								// TODO(austin): Make exposure real after it works.
								min_exp_time = "1"; /* us? */
								//max_exp_time = "60375670"; /* us? */
								max_exp_time = "1000"; /* us? */
								step_exp_time = "1";
								default_exp_time = "800"; /* us */ /* JC: was set to 10 as default, flaking/murky image */

								embedded_metadata_height = "2";
							};
							ports {
								#address-cells = <1>;
								#size-cells = <0>;
								port@0 {
									reg = <0>;
									rbpcv3_imx296_out0: endpoint {
										port-index = <1>;
										bus-width = <1>;
										remote-endpoint = <&rbpcv3_imx296_csi_in0>;
									};
								};
							};
						};
					};
					i2c@1 {
						status = "okay";
						reg = <1>;
						#address-cells = <1>;
						#size-cells = <0>;
						rbpcv2_imx219_c@10 {
							status = "disabled";
						};
						rbpcv3_imx296_c@1a {
						    reset-gpios = <&gpio CAM1_PWDN GPIO_ACTIVE_HIGH>;
							compatible = "sony,imx296";
							/* I2C device address */
							reg = <0x1a>;
							/* V4L2 device node location */
							devnode = "video1";
                            				clocks = <&imx296_fixed_cam_clk>;
                            				clock-names = "mclk";
                            				mclk = "mclk";

							/* Physical dimensions of sensor */
							physical_w = "5.0232";
							physical_h = "3.7536";
							sensor_model = "imx296";
							use_sensor_mode_id = "true";

							mode0 {
								// TODO(austin): Figure out what mclk actually resolves to and is used for.  We set mclk to it...  But I don't know what that does.  It appears in the datasheet?
								mclk_khz = "54000";
								num_lanes = "1";
								tegra_sinterface = "serial_c";
								phy_mode = "DPHY";
								discontinuous_clk = "no";
								dpcm_enable = "false";
								cil_settletime = "0";
								lane_polarity = "0";

								active_w = "1456";
								active_h = "1088";
								mode_type = "bayer";
								pixel_phase = "rggb";
								csi_pixel_bit_depth = "10";
								/* Only used by android */
								readout_orientation = "0";
								line_length = "1100";
								inherent_gain = "1";
								mclk_multiplier = "22";
								pix_clk_hz = "118800000";

								gain_factor = "16";
								framerate_factor = "1000000";
								exposure_factor = "1000000";
			       				// TODO(austin): Min is actually 0, do we really need to get to it?
								min_gain_val = "1"; /* 0db */
								max_gain_val = "200"; /* 48 db */
								step_gain_val = "1";
								default_gain = "100"; // JC: was "1";
								min_hdr_ratio = "1";
								max_hdr_ratio = "1";
								min_framerate = "64373"; /* 0.06... fps */
								max_framerate = "60375670"; /* 60.3... fps */
								step_framerate = "1";
								default_framerate = "60000000"; /* 60.0 fps */
								// TODO(austin): Make exposure real after it works.
								min_exp_time = "1"; /* us? */
								//max_exp_time = "60375670"; /* us? */
								max_exp_time = "1000"; /* us? */
								step_exp_time = "1";
								default_exp_time = "800"; /* us */ /* JC: was set to 10 as default, flaking/murky image */

								embedded_metadata_height = "2";
							};
							ports {
								#address-cells = <1>;
								#size-cells = <0>;
								port@0 {
									reg = <0>;
									rbpcv3_imx296_out1: endpoint {
										status = "okay";
										port-index = <2>;
										bus-width = <1>;
										remote-endpoint = <&rbpcv3_imx296_csi_in1>;
									};
								};
							};
						};
					};
				};
				gpio@6000d000 {
					camera-control-output-low {
						gpio-hog;
						output-low;
						gpios = <CAM1_PWDN 0  CAM0_PWDN 0>;
						label = "cam1-pwdn", "cam0-pwdn";
					};
				};

				gpio@2200000 {
					camera-control-output-low {
						gpio-hog;
						output-low;
						gpios = <CAM0_RST 0>;
						label = "cam0-rst";
					};
				};
			};
		};
	};
};
